---
# vim: set ft=ansible:
# main tasks file for patch testing
# typical output from CSV parsing
#   "rate-bas-p002": {
#    "patching": {
#      "p4p2": {
#        "port_id": "Ethernet4",
#        "switch_name": "BAS-FIC-0H1E-12S-C02",
#        "bond": ""

# typical output from the ansible lldp_facts module
#   "p4p2": {
#   "port_description": "RATE-BAS-P005_P4P2",
#   "port_id": "Ethernet4",
#   "port_mac": "44:4c:a8:d6:f9:05",
#   "switch_name": "BAS-FIC-0H1E-12S-C02.picotrading.com"
- name: ensure lldpad is available
  yum:
    name: lldpad
    state: installed
  tags: simple

- name: ensure lldpad is running
  service:
    name: lldpad
    state: running

- name: enable LLDP transmission on all interfaces
  command: "lldptool set-lldp -i {{ item }} adminStatus=rxtx"
  with_items: "{{ patching.keys() }}"
  when: not item|search ('^(bond|lo|usb)[0-9]?')
  ignore_errors: yes

- name: wait for lldpad to wake up
  pause:
    seconds: 10
  tags:
    - delay

- name: gather LLDP information
  lldp_facts:
  tags:
    - assert

- name: check patching schedule for {{ inventory_hostname }} 
  assert_pico:
    that: "patching['{{ item.0 }}']['{{ item.1 }}'].split('.')|first == ansible_lldp['{{ item.0 }}']['{{ item.1 }}'].split('.')|first"
    fail_msg: "{{ patching[item.0][item.1] }} !=  {{ ansible_lldp[item.0][item.1] }}"
    pass_msg: "{{ patching[item.0][item.1] }} ==  {{ ansible_lldp[item.0][item.1] }}"
  with_nested: 
    - "{{ patching.keys() }}"
    - "{{ interface_checks }}"
  ignore_errors: yes
  when: "item.0 in ansible_lldp.keys()"
  register: patch_checks
  tags:
    - assert

# - debug:
#     var: patch_checks
